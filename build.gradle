/*buildscript {
    ext { // build.gradle에서 전역변수 설정
        springBootVersion = '2.7.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}*/

// 위 buildscript 개선사항 buildsctipt를 사용하지 않고 plugins에 선언 gradle4.3부터 변경
// 변경이유는 https://docs.gradle.org/current/userguide/plugins.html 에서 나옴
plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'    // 스프링부트 의존성을 관리하는 필수 플러그인
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {  // 어떤 원격 저장소를 사용할지
    mavenCentral()  // 예전부터 쓰던 저장소 지금은 잘 사용 안 하게 됨
//    jcenter()   // 업로드가 간편해 자주 사용, 책에서는 사용하는 코드지만 22년 2월에 제작사에서 지원 종료

}
//compile은 연결된 API 모두가 프로젝트에 의해 노출이 되고 implementation은 노출되지 않는다.
//gradle 3.0 부터는 compile을 권장하지 않음 compile 대신 api로 변경 하지만 쓰지 말 것
dependencies {  // 개발에 필요한 의존성 선언부
    implementation('org.springframework.boot:spring-boot-starter-web')     // 버전 명시를 하지 않아야 위에 버전을 따라감
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    // 스프링 부트용 jpa 추상화 라이브러리
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('org.springframework.boot:spring-boot-devtools')
}

test {
    useJUnitPlatform()
}
